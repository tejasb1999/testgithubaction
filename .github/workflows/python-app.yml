name: Python CI

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python 3.12.3
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.3'

      # Step 3: Verify Python version
      - name: Check Python version
        run: python --version

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: List files in the tests directory (debugging)
      - name: List files in the tests directory
        run: ls -l tests/

      # Step 6: List all files in the repository (debugging)
      - name: List all files in the repository
        run: ls -l

      # Step 7: Run tests on specific file
      - name: Run tests
        run: pytest tests/tests_operations.py --maxfail=1 --disable-warnings

      # Step 8: Build and Push Docker Image
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Debug Dockerfile path and content
      - name: Debug Dockerfile Path
        run: |
          echo "Listing all files in the root directory"
          ls -l
          echo "Listing files in the 'src' directory"
          ls -l ./src

      # Step 9: Build and push
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .  # Set the context to the root of the repository
          file: ./src/Dockerfile  # Specify Dockerfile location inside the 'src/' directory (make sure this is correct)
          push: true
          tags: sophtimizec/github-actions-demo-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push  # Ensure deployment happens after the image is built and pushed

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Add a manual docker login to ensure proper authentication
      - name: Manually login to Docker (for debugging)
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
  
      # Set up SSH key for deployment
      - name: Set up SSH key for deployment
        run: |
          mkdir -p ~/.ssh  # Ensure the .ssh directory exists
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa  # Correct permissions for the private key
          eval "$(ssh-agent -s)"  # Start the ssh-agent
          ssh-add ~/.ssh/id_rsa  # Add the SSH private key to the agent
  
      # Deploy Docker container to Kamatera server
      - name: Deploy Docker container to Kamatera
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.KAMATERA_USERNAME }}@${{ secrets.KAMATERA_SERVER_IP }} <<EOF
            # Navigate to the home directory and create the folder if not exist
            cd ~
            mkdir -p Github_Actions_Demo
  
            # Change directory to 'Github_Actions_Demo' folder
            cd Github_Actions_Demo
  
            # Pull the latest image from Docker Hub
            docker pull sophtimizec/github-actions-demo-app:latest
  
            # Stop and remove the old container (if it exists)
            docker stop my-app || true
            docker rm my-app || true
  
            # Run the new container and mount it to the specific folder
            docker run -d --name my-app -p 80:80 \
              -v $(pwd):/app sophtimizec/github-actions-demo-app:latest
          EOF
